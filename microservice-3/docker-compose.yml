version: "3.7"
services:
    customer:
        build:
            context: ./customer
            dockerfile: ./app.Dockerfile
        container_name: customer
        ports:
            - "7000:7000"
        depends_on:
            customerdb:
                condition: service_healthy
        environment: 
            DB_HOST: postgresql://customerdb-user:comp90078!@customerdb/comp90078-db
    customerdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: comp90078!
            POSTGRES_USER: customerdb-user
            POSTGRES_DB: comp90078-db
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5
        ports:
            - "6000:5432"
        # volumes:
        #     - ./data:/var/lib/postgresql/data
    account:
        build:
            context: ./account
            dockerfile: ./app.Dockerfile
        container_name: account
        ports:
            - "7010:7010"
        depends_on:
            accountdb:
                condition: service_healthy
        environment: 
            DB_HOST: postgresql://accountdb-user:comp90078!@accountdb/comp90078-db
            SIMULATOR_HOST: http://192.168.0.102:8090/sim
            HISTORICAL_TRANSACTION_HOST: http://historical_transaction:7030
            RABBIT_MQ_HOST: 192.168.0.102
    accountdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: comp90078!
            POSTGRES_USER: accountdb-user
            POSTGRES_DB: comp90078-db
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5
        ports:
            - "6001:5432"
        # volumes:
        #     - ./data:/var/lib/postgresql/data
    historical_transaction:
        build:
            context: ./historical_transaction
            dockerfile: ./app.Dockerfile
        container_name: historical_transaction
        ports:
            - "7030:7030"
        depends_on:
            historical_transactiondb:
                condition: service_healthy
        environment: 
            DB_HOST: postgresql://historical_transactiondb-user:comp90078!@historical_transactiondb/comp90078-db
    historical_transactiondb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: comp90078!
            POSTGRES_USER: historical_transactiondb-user
            POSTGRES_DB: comp90078-db
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5
        ports:
            - "6002:5432"
        # volumes:
        #     - ./data:/var/lib/postgresql/data
    session:
        build:
            context: ./session
            dockerfile: ./app.Dockerfile
        container_name: session
        ports:
            - "7050:7050"
        # depends_on:
        #     - appdb
        environment: 
            SIMULATOR_HOST: http://192.168.0.102:8090/sim
            HISTORICAL_TRANSACTION_HOST: http://historical_transaction:7030
    historical_transaction_mq:
        build:
            context: ./historical_transaction_mq
            dockerfile: ./app.Dockerfile
        container_name: historical_transaction_mq
        # restart: on-failure
        # depends_on:
        #     - rabbitmq
        environment: 
            RABBIT_MQ_HOST: 192.168.0.102
            HISTORICAL_TRANSACTION_HOST: http://historical_transaction:7030
    # rabbitmq:
    #     image: rabbitmq:3
    #     command: rabbitmq-server
    #     healthcheck:
    #         test: [ "CMD", "nc", "-z", "localhost", "5672" ]
    #         interval: 5s
    #         timeout: 15s
    #         retries: 1
        # ports:
        # - '4369:4369'
        # - '5551:5551'
        # - '5552:5552'
        # - '5672:5672'
        # - '25672:25672'
        # - '15672:15672'
        # environment:
        #     - RABBITMQ_SECURE_PASSWORD=yes
        # volumes:
        #     - 'rabbitmq_data:/bitnami/rabbitmq/mnesia'